import { Pipe } from '@angular/core';
var FlattenPipe = (function () {
    function FlattenPipe() {
    }
    FlattenPipe.prototype.transform = function (input, shallow) {
        if (shallow === void 0) { shallow = false; }
        if (!Array.isArray(input)) {
            return input;
        }
        return shallow
            ? [].concat.apply([], input)
            : this.flatten(input);
    };
    FlattenPipe.prototype.flatten = function (array) {
        var _this = this;
        return array.reduce(function (arr, elm) {
            if (Array.isArray(elm)) {
                return arr.concat(_this.flatten(elm));
            }
            return arr.concat(elm);
        }, []);
    };
    return FlattenPipe;
}());
export { FlattenPipe };
FlattenPipe.decorators = [
    { type: Pipe, args: [{ name: 'flatten' },] },
];
/** @nocollapse */
FlattenPipe.ctorParameters = function () { return []; };
//# sourceMappingURL=flatten.js.map